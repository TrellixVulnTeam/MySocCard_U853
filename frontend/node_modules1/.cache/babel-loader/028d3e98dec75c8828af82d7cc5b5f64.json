{"ast":null,"code":"var _jsxFileName = \"/home/gusmadvol/Developer/wwwcie/payment/frontend/src/context/AuthContext.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport jwt_decode from \"jwt-decode\";\nimport { baseUrl } from \"./ApiContext\";\n/** loginFunc: loginFunc,\n *\n * logoutFunc: logOutUser,\n *\n * setAuthTokens: setAuthTokens,\n *\n * setUser: setUser,\n *\n * user: user,\n * {\n  \"token_type\": \"access\",\n  \"exp\": unixdata,\n  \"iat\": unix date,\n  \"jti\": \"\",\n  \"user_id\": Int,\n  \"name\": \"\",\n  \"role\": [],\n  \"lid_id\": Int\n} \n *\n * authTokens: authTokens,\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport default AuthContext;\nexport const AuthProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  // dont use useFetch here because it will not work\n  const [authTokens, setAuthTokens] = useState(() => localStorage.getItem(\"authTokens\") && JSON.parse(localStorage.getItem(\"authTokens\")));\n  const [user, setUser] = useState(() => localStorage.getItem(\"user\") && jwt_decode(JSON.parse(localStorage.getItem(\"user\"))));\n\n  const start = async () => {\n    await fetch(`${baseUrl()}`);\n  };\n\n  const navigate = useNavigate();\n\n  const loginFunc = async (username, password) => {\n    let res = await fetch(`${baseUrl()}/api/users/token/`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        username: username,\n        password: password\n      })\n    });\n    let data = await res.json();\n\n    if (res.status === 200) {\n      setAuthTokens(data);\n      setUser(jwt_decode(data.access));\n      localStorage.setItem(\"authTokens\", JSON.stringify(data));\n      localStorage.setItem(\"user\", JSON.stringify(data.access));\n      navigate(\"../agenda\", {\n        replace: true\n      });\n    } else {\n      console.log(`Error with ${data.detail}`);\n    }\n  };\n\n  const logOutUser = () => {\n    localStorage.removeItem(\"authTokens\");\n    localStorage.removeItem(\"user\");\n    setAuthTokens(null);\n    setUser(null);\n    navigate(\"../login\", {\n      replace: true\n    });\n  };\n\n  const data = {\n    loginFunc: loginFunc,\n    logoutFunc: logOutUser,\n    setAuthTokens: setAuthTokens,\n    setUser: setUser,\n    user: user,\n    authTokens: authTokens,\n    start: start\n  }; // user && navigate(\"../login\", { replace: true });\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: data,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 10\n  }, this);\n};\n\n_s(AuthProvider, \"naHW+hCXUSde4dqjjMm0HEK47s4=\", false, function () {\n  return [useNavigate];\n});\n\n_c = AuthProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useState","useNavigate","jwt_decode","baseUrl","AuthContext","AuthProvider","children","authTokens","setAuthTokens","localStorage","getItem","JSON","parse","user","setUser","start","fetch","navigate","loginFunc","username","password","res","method","headers","body","stringify","data","json","status","access","setItem","replace","console","log","detail","logOutUser","removeItem","logoutFunc"],"sources":["/home/gusmadvol/Developer/wwwcie/payment/frontend/src/context/AuthContext.js"],"sourcesContent":["import { createContext, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport jwt_decode from \"jwt-decode\";\nimport { baseUrl } from \"./ApiContext\";\n/** loginFunc: loginFunc,\n *\n * logoutFunc: logOutUser,\n *\n * setAuthTokens: setAuthTokens,\n *\n * setUser: setUser,\n *\n * user: user,\n * {\n  \"token_type\": \"access\",\n  \"exp\": unixdata,\n  \"iat\": unix date,\n  \"jti\": \"\",\n  \"user_id\": Int,\n  \"name\": \"\",\n  \"role\": [],\n  \"lid_id\": Int\n} \n *\n * authTokens: authTokens,\n */\n\nconst AuthContext = createContext();\nexport default AuthContext;\nexport const AuthProvider = ({ children }) => {\n  // dont use useFetch here because it will not work\n  const [authTokens, setAuthTokens] = useState(\n    () =>\n      localStorage.getItem(\"authTokens\") &&\n      JSON.parse(localStorage.getItem(\"authTokens\"))\n  );\n  const [user, setUser] = useState(\n    () =>\n      localStorage.getItem(\"user\") &&\n      jwt_decode(JSON.parse(localStorage.getItem(\"user\")))\n  );\n  const start = async () => {\n    await fetch(`${baseUrl()}`);\n  };\n  const navigate = useNavigate();\n  const loginFunc = async (username, password) => {\n    let res = await fetch(`${baseUrl()}/api/users/token/`, {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        username: username,\n        password: password,\n      }),\n    });\n    let data = await res.json();\n    if (res.status === 200) {\n      setAuthTokens(data);\n      setUser(jwt_decode(data.access));\n      localStorage.setItem(\"authTokens\", JSON.stringify(data));\n      localStorage.setItem(\"user\", JSON.stringify(data.access));\n      navigate(\"../agenda\", { replace: true });\n    } else {\n      console.log(`Error with ${data.detail}`);\n    }\n  };\n\n  const logOutUser = () => {\n    localStorage.removeItem(\"authTokens\");\n    localStorage.removeItem(\"user\");\n    setAuthTokens(null);\n    setUser(null);\n    navigate(\"../login\", { replace: true });\n  };\n\n  const data = {\n    loginFunc: loginFunc,\n    logoutFunc: logOutUser,\n    setAuthTokens: setAuthTokens,\n    setUser: setUser,\n    user: user,\n    authTokens: authTokens,\n    start: start,\n  };\n  // user && navigate(\"../login\", { replace: true });\n  return <AuthContext.Provider value={data}>{children}</AuthContext.Provider>;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}