{"ast":null,"code":"var _jsxFileName = \"/home/gusmadvol/Developer/wwwcie/payment/frontend/src/context/ApiContext.js\",\n    _s = $RefreshSig$();\n\nimport jwt_decode from \"jwt-decode\";\nimport dayjs from \"dayjs\";\nimport { createContext, useContext } from \"react\";\nimport AuthContext from \"./AuthContext\"; //  \"https://stropdas.herokuapp.com\";\n//  \"http://127.0.0.1:8000\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const baseUrl = () => {\n  let LOCAL = true;\n  let url;\n\n  if (LOCAL) {\n    url = \"http://127.0.0.1:8000\";\n  } else {\n    url = \"uploaded url\";\n  }\n\n  return url;\n}; // (\"https://stropdas2.herokuapp.com/\");\n\n/**### use this instead of fetch\n * user: user, type\n * {\"token_type\": string,\"exp\": unix date,\"iat\": unix date,\"jti\": string,\"user_id\": Int,\"name\": string,\"roles\": [ ],\"lid_id\": Int}\n *\n * ApiRequest: ApiRequest,\n * ### use this instead of fetch\n * @params {url: string , config : object}\n * @returns \\{ res, data \\}\n *\n * ApiFileRequest: ApiFileRequest,\n * ### use this instead of fetch for files\n * @params {url: string , config : object}\n * @returns \\{ res, data \\} */\n\nconst ApiContext = /*#__PURE__*/createContext();\nexport default ApiContext;\nexport const ApiProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  // will work from AuthProvider downwards,\n  const {\n    user,\n    setAuthTokens,\n    setUser,\n    authTokens,\n    logoutFunc\n  } = useContext(AuthContext);\n  /** makes the original request called but with the Bearer set and to the correct location */\n\n  const originalRequest = async (url, config) => {\n    let urlFetch = `${baseUrl()}${url}`;\n    const res = await fetch(urlFetch, config);\n    const data = await res.json();\n\n    if (res.status !== 200) {\n      console.log(`Error ${res.status} fetching ${url}`);\n    }\n\n    return [res, data];\n  };\n  /** gets the refresh token and update the local state and local storage */\n\n\n  const refreshToken = async authTokens => {\n    const res = await fetch(`${baseUrl()}/api/users/token/refresh/`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        refresh: authTokens === null || authTokens === void 0 ? void 0 : authTokens.refresh\n      })\n    });\n    let data = await res.json();\n\n    if (res.status === 200) {\n      setAuthTokens(data); // if cycling refresh tokens\n\n      setUser(() => jwt_decode(data.access));\n      localStorage.setItem(\"authTokens\", JSON.stringify(data)); // if cycling refresh tokens\n\n      localStorage.setItem(\"user\", JSON.stringify(data.access));\n    } else {\n      console.log(`Problem met de refresh token: ${res}`);\n      logoutFunc();\n    }\n  };\n  /** ## ust this instead of fetch\n   * @params {url: string , config : object}\n   * @returns \\{ res, data \\}*/\n\n\n  const ApiRequest = async function (url) {\n    var _authTokens$refresh;\n\n    let config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const isExpiredRefresh = dayjs.unix(authTokens === null || authTokens === void 0 ? void 0 : (_authTokens$refresh = authTokens.refresh) === null || _authTokens$refresh === void 0 ? void 0 : _authTokens$refresh.exp).diff(dayjs(), \"minute\") < 1;\n    const isExpired = dayjs.unix(user === null || user === void 0 ? void 0 : user.exp).diff(dayjs(), \"minute\") < 1;\n\n    if (isExpiredRefresh) {\n      console.log(\"refresh token is expired, you were logged out\");\n      logoutFunc();\n    } else {// refreshToken(authTokens);\n    }\n\n    if (isExpired && authTokens) {\n      refreshToken(authTokens);\n    }\n\n    config[\"headers\"] = {\n      Authorization: `Bearer ${authTokens === null || authTokens === void 0 ? void 0 : authTokens.access}`\n    };\n\n    if (!config[\"headers\"][\"Content-type\"]) {\n      config[\"headers\"][\"Content-type\"] = \"application/json\";\n    }\n\n    if (user) {\n      const [res, data] = await originalRequest(url, config);\n      return {\n        res,\n        data\n      };\n    }\n  };\n  /** ## ust this instead of fetch for Files\n   * @params {url: string , config : object}\n   * @returns \\{ res, data \\}*/\n\n\n  const ApiFileRequest = async function (url) {\n    let config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const isExpired = dayjs.unix(user === null || user === void 0 ? void 0 : user.exp).diff(dayjs(), \"minute\") < 1;\n\n    if (isExpired) {\n      refreshToken(authTokens);\n    }\n\n    config[\"headers\"] = {\n      Authorization: `Authentication ${authTokens === null || authTokens === void 0 ? void 0 : authTokens.access}`\n    };\n\n    if (user) {\n      const [res, data] = await originalRequest(url, config);\n\n      if (res.status === 401) {\n        console.log(\"Unauthorized\", url, config);\n      }\n\n      if (res.status === 403) {\n        console.log(\"Permision denied\", url, config);\n      }\n\n      return {\n        res,\n        data\n      };\n    } // console.log(\"input\", url);\n\n  };\n\n  const value_dic = {\n    user: user,\n    ApiRequest: ApiRequest,\n    ApiFileRequest: ApiFileRequest\n  };\n  return /*#__PURE__*/_jsxDEV(ApiContext.Provider, {\n    value: value_dic,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ApiProvider, \"nXZ/DanFw+hcWJ6v6yJiQYJzOvY=\");\n\n_c = ApiProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ApiProvider\");","map":{"version":3,"names":["jwt_decode","dayjs","createContext","useContext","AuthContext","baseUrl","LOCAL","url","ApiContext","ApiProvider","children","user","setAuthTokens","setUser","authTokens","logoutFunc","originalRequest","config","urlFetch","res","fetch","data","json","status","console","log","refreshToken","method","headers","body","JSON","stringify","refresh","access","localStorage","setItem","ApiRequest","isExpiredRefresh","unix","exp","diff","isExpired","Authorization","ApiFileRequest","value_dic"],"sources":["/home/gusmadvol/Developer/wwwcie/payment/frontend/src/context/ApiContext.js"],"sourcesContent":["import jwt_decode from \"jwt-decode\";\nimport dayjs from \"dayjs\";\nimport { createContext, useContext } from \"react\";\nimport AuthContext from \"./AuthContext\";\n\n//  \"https://stropdas.herokuapp.com\";\n//  \"http://127.0.0.1:8000\";\nexport const baseUrl = () => {\n  let LOCAL = true;\n  let url;\n  if (LOCAL) {\n    url = \"http://127.0.0.1:8000\";\n  } else {\n    url = \"uploaded url\";\n  }\n  return url;\n};\n\n// (\"https://stropdas2.herokuapp.com/\");\n/**### use this instead of fetch\n * user: user, type\n * {\"token_type\": string,\"exp\": unix date,\"iat\": unix date,\"jti\": string,\"user_id\": Int,\"name\": string,\"roles\": [ ],\"lid_id\": Int}\n *\n * ApiRequest: ApiRequest,\n * ### use this instead of fetch\n * @params {url: string , config : object}\n * @returns \\{ res, data \\}\n *\n * ApiFileRequest: ApiFileRequest,\n * ### use this instead of fetch for files\n * @params {url: string , config : object}\n * @returns \\{ res, data \\} */\nconst ApiContext = createContext();\nexport default ApiContext;\n\nexport const ApiProvider = ({ children }) => {\n  // will work from AuthProvider downwards,\n  const { user, setAuthTokens, setUser, authTokens, logoutFunc } =\n    useContext(AuthContext);\n  /** makes the original request called but with the Bearer set and to the correct location */\n  const originalRequest = async (url, config) => {\n    let urlFetch = `${baseUrl()}${url}`;\n    const res = await fetch(urlFetch, config);\n    const data = await res.json();\n    if (res.status !== 200) {\n      console.log(`Error ${res.status} fetching ${url}`);\n    }\n    return [res, data];\n  };\n  /** gets the refresh token and update the local state and local storage */\n  const refreshToken = async (authTokens) => {\n    const res = await fetch(`${baseUrl()}/api/users/token/refresh/`, {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        refresh: authTokens?.refresh,\n      }),\n    });\n    let data = await res.json();\n    if (res.status === 200) {\n      setAuthTokens(data); // if cycling refresh tokens\n      setUser(() => jwt_decode(data.access));\n      localStorage.setItem(\"authTokens\", JSON.stringify(data)); // if cycling refresh tokens\n      localStorage.setItem(\"user\", JSON.stringify(data.access));\n    } else {\n      console.log(`Problem met de refresh token: ${res}`);\n      logoutFunc();\n    }\n  };\n  /** ## ust this instead of fetch\n   * @params {url: string , config : object}\n   * @returns \\{ res, data \\}*/\n  const ApiRequest = async (url, config = {}) => {\n    const isExpiredRefresh =\n      dayjs.unix(authTokens?.refresh?.exp).diff(dayjs(), \"minute\") < 1;\n    const isExpired = dayjs.unix(user?.exp).diff(dayjs(), \"minute\") < 1;\n    if (isExpiredRefresh) {\n      console.log(\"refresh token is expired, you were logged out\");\n      logoutFunc();\n    } else {\n      // refreshToken(authTokens);\n    }\n    if (isExpired && authTokens) {\n      refreshToken(authTokens);\n    }\n    config[\"headers\"] = {\n      Authorization: `Bearer ${authTokens?.access}`,\n    };\n    if (!config[\"headers\"][\"Content-type\"]) {\n      config[\"headers\"][\"Content-type\"] = \"application/json\";\n    }\n    if (user) {\n      const [res, data] = await originalRequest(url, config);\n      return { res, data };\n    }\n  };\n  /** ## ust this instead of fetch for Files\n   * @params {url: string , config : object}\n   * @returns \\{ res, data \\}*/\n  const ApiFileRequest = async (url, config = {}) => {\n    const isExpired = dayjs.unix(user?.exp).diff(dayjs(), \"minute\") < 1;\n    if (isExpired) {\n      refreshToken(authTokens);\n    }\n    config[\"headers\"] = {\n      Authorization: `Authentication ${authTokens?.access}`,\n    };\n    if (user) {\n      const [res, data] = await originalRequest(url, config);\n      if (res.status === 401) {\n        console.log(\"Unauthorized\", url, config);\n      }\n      if (res.status === 403) {\n        console.log(\"Permision denied\", url, config);\n      }\n      return { res, data };\n    }\n\n    // console.log(\"input\", url);\n  };\n\n  const value_dic = {\n    user: user,\n    ApiRequest: ApiRequest,\n    ApiFileRequest: ApiFileRequest,\n  };\n  return (\n    <ApiContext.Provider value={value_dic}>{children}</ApiContext.Provider>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}